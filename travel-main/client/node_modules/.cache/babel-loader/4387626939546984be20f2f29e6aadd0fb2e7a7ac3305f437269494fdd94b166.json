{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\travel-main\\\\client\\\\src\\\\components\\\\ChatWindow\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  placeName\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: '안녕하세요! 궁금한 점을 물어보세요.'\n  }]);\n  const [input, setInput] = useState('');\n  const [suggestedQuestions, setSuggestedQuestions] = useState([]);\n\n  // 추천 질문 가져오기\n  useEffect(() => {\n    const fetchSuggestedQuestions = async () => {\n      try {\n        console.log(\"Fetching suggestions for placeName:\", placeName); // 디버깅 로그 추가\n        const response = await axios.post('/api/openai/get-suggestions', {\n          placeName\n        });\n        console.log(\"Suggestions received:\", response.data.questions); // 응답 데이터 확인\n        setSuggestedQuestions(response.data.questions);\n      } catch (error) {\n        console.error('추천 질문 가져오기 에러:', error);\n        setSuggestedQuestions([\"추천 질문을 불러오는 데 실패했습니다.\"]); // 기본값 설정\n      }\n    };\n    if (placeName) {\n      fetchSuggestedQuestions();\n    } else {\n      console.warn(\"placeName is not provided to ChatWindow.\");\n    }\n  }, [placeName]);\n\n  // 메시지 전송\n  const sendMessage = async message => {\n    // 사용자 메시지를 추가\n    setMessages(prevMessages => [...prevMessages, {\n      sender: 'user',\n      text: message\n    }]);\n    try {\n      // AI 응답 요청\n      const response = await axios.post('/api/openai/chat', {\n        message,\n        placeName\n      });\n      const botMessage = response.data.reply;\n\n      // 봇 메시지를 추가\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: botMessage\n      }]);\n    } catch (error) {\n      console.error('챗봇 에러:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: '응답을 받을 수 없습니다.'\n      }]);\n    }\n  };\n\n  // 입력창에서 메시지 전송\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const userMessage = input;\n    setInput('');\n    sendMessage(userMessage); // AI와 대화 시작\n  };\n\n  // 추천 질문 클릭 시 자동 전송\n  const handleSuggestedQuestionClick = question => {\n    sendMessage(question); // AI와 대화 시작\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC57\\uBD07\\uACFC \\uB300\\uD654\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested-questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uCD94\\uCC9C \\uC9C8\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestedQuestionClick(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === 'user' ? 'user' : 'bot'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.sender === 'user' ? '나' : '봇'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), \": \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        onKeyPress: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatWindow, \"sSJUXe5LMWOhvD/xwwaGhTMsj/o=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatWindow","placeName","_s","messages","setMessages","sender","text","input","setInput","suggestedQuestions","setSuggestedQuestions","fetchSuggestedQuestions","console","log","response","post","data","questions","error","warn","sendMessage","message","prevMessages","botMessage","reply","handleSend","trim","userMessage","handleSuggestedQuestionClick","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","msg","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/projects/travel-main/client/src/components/ChatWindow/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChatWindow.css';\n\nfunction ChatWindow({ placeName }) {\n  const [messages, setMessages] = useState([\n    { sender: 'bot', text: '안녕하세요! 궁금한 점을 물어보세요.' },\n  ]);\n  const [input, setInput] = useState('');\n  const [suggestedQuestions, setSuggestedQuestions] = useState([]);\n\n  // 추천 질문 가져오기\n  useEffect(() => {\n    const fetchSuggestedQuestions = async () => {\n      try {\n        console.log(\"Fetching suggestions for placeName:\", placeName); // 디버깅 로그 추가\n        const response = await axios.post('/api/openai/get-suggestions', {\n          placeName,\n        });\n        console.log(\"Suggestions received:\", response.data.questions); // 응답 데이터 확인\n        setSuggestedQuestions(response.data.questions);\n      } catch (error) {\n        console.error('추천 질문 가져오기 에러:', error);\n        setSuggestedQuestions([\"추천 질문을 불러오는 데 실패했습니다.\"]); // 기본값 설정\n      }\n    };\n\n    if (placeName) {\n      fetchSuggestedQuestions();\n    } else {\n      console.warn(\"placeName is not provided to ChatWindow.\");\n    }\n  }, [placeName]);\n\n  // 메시지 전송\n  const sendMessage = async (message) => {\n    // 사용자 메시지를 추가\n    setMessages((prevMessages) => [...prevMessages, { sender: 'user', text: message }]);\n\n    try {\n      // AI 응답 요청\n      const response = await axios.post('/api/openai/chat', {\n        message,\n        placeName,\n      });\n      const botMessage = response.data.reply;\n\n      // 봇 메시지를 추가\n      setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: botMessage }]);\n    } catch (error) {\n      console.error('챗봇 에러:', error);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: 'bot', text: '응답을 받을 수 없습니다.' },\n      ]);\n    }\n  };\n\n  // 입력창에서 메시지 전송\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const userMessage = input;\n    setInput('');\n    sendMessage(userMessage); // AI와 대화 시작\n  };\n\n  // 추천 질문 클릭 시 자동 전송\n  const handleSuggestedQuestionClick = (question) => {\n    sendMessage(question); // AI와 대화 시작\n  };\n\n  return (\n      <div className=\"chat-window\">\n        <h2>챗봇과 대화하기</h2>\n        <div className=\"suggested-questions\">\n          <h4>추천 질문</h4>\n          <ul>\n            {suggestedQuestions.map((question, index) => (\n                <li key={index} onClick={() => handleSuggestedQuestionClick(question)}>\n                  {question}\n                </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"messages\">\n          {messages.map((msg, index) => (\n              <div\n                  key={index}\n                  className={`message ${msg.sender === 'user' ? 'user' : 'bot'}`}\n              >\n                <p>\n                  <strong>{msg.sender === 'user' ? '나' : '봇'}</strong>: {msg.text}\n                </p>\n              </div>\n          ))}\n        </div>\n        <div className=\"input-area\">\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"메시지를 입력하세요\"\n              onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n          />\n          <button onClick={handleSend}>전송</button>\n        </div>\n      </div>\n  );\n}\n\nexport default ChatWindow;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}