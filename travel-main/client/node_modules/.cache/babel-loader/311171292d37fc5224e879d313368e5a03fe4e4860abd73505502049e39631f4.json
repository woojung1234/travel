{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\travel-main\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [input, setInput] = useState('');\n  const [searchHistory, setSearchHistory] = useState([]);\n  const navigate = useNavigate();\n\n  // 컴포넌트가 마운트될 때 검색 기록을 불러옵니다.\n  useEffect(() => {\n    const history = JSON.parse(localStorage.getItem('searchHistory')) || [];\n    setSearchHistory(history);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    try {\n      // 백엔드의 검색 API 호출\n      const response = await axios.get('/api/places/search', {\n        params: {\n          query: input\n        }\n      });\n      const place = response.data.results[0];\n\n      // 검색 기록 저장\n      const updatedHistory = [input, ...searchHistory.filter(item => item !== input)];\n      setSearchHistory(updatedHistory);\n      localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\n      navigate('/results', {\n        state: {\n          query: input,\n          place\n        }\n      });\n    } catch (error) {\n      console.error('검색 에러:', error);\n      // 에러 처리 로직 추가 (예: 사용자에게 에러 메시지 표시)\n    }\n  };\n  const handleHistoryClick = query => {\n    setInput(query); // 선택한 기록을 검색창에 채워넣기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-bar\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"\\uC5EC\\uD589\\uC9C0, \\uB9DB\\uC9D1 \\uB4F1 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        onFocus: e => e.target.placeholder = '',\n        onBlur: e => e.target.placeholder = '여행지, 맛집 등 정보를 입력하세요.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), searchHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uCD5C\\uADFC \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchHistory.map((query, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleHistoryClick(query),\n          children: query\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n_s(SearchBar, \"/8zk1B9fvMy7wEzYTH9hNu+Ospw=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","SearchBar","_s","input","setInput","searchHistory","setSearchHistory","navigate","history","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","trim","response","get","params","query","place","data","results","updatedHistory","filter","item","setItem","stringify","state","error","console","handleHistoryClick","children","className","onSubmit","type","value","onChange","target","placeholder","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/projects/travel-main/client/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './SearchBar.css';\n\nfunction SearchBar() {\n  const [input, setInput] = useState('');\n  const [searchHistory, setSearchHistory] = useState([]);\n  const navigate = useNavigate();\n\n  // 컴포넌트가 마운트될 때 검색 기록을 불러옵니다.\n  useEffect(() => {\n    const history = JSON.parse(localStorage.getItem('searchHistory')) || [];\n    setSearchHistory(history);\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n\n    try {\n      // 백엔드의 검색 API 호출\n      const response = await axios.get('/api/places/search', {\n        params: { query: input },\n      });\n      const place = response.data.results[0];\n\n      // 검색 기록 저장\n      const updatedHistory = [input, ...searchHistory.filter((item) => item !== input)];\n      setSearchHistory(updatedHistory);\n      localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\n\n      navigate('/results', { state: { query: input, place } });\n    } catch (error) {\n      console.error('검색 에러:', error);\n      // 에러 처리 로직 추가 (예: 사용자에게 에러 메시지 표시)\n    }\n  };\n\n  const handleHistoryClick = (query) => {\n    setInput(query); // 선택한 기록을 검색창에 채워넣기\n  };\n\n  return (\n      <div>\n        <form className=\"search-bar\" onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"여행지, 맛집 등 정보를 입력하세요.\"\n              onFocus={(e) => (e.target.placeholder = '')}\n              onBlur={(e) => (e.target.placeholder = '여행지, 맛집 등 정보를 입력하세요.')}\n          />\n          <button type=\"submit\">검색</button>\n        </form>\n\n        {/* 검색 기록 표시 */}\n        {searchHistory.length > 0 && (\n            <div className=\"search-history\">\n              <h4>최근 검색</h4>\n              <ul>\n                {searchHistory.map((query, index) => (\n                    <li key={index} onClick={() => handleHistoryClick(query)}>\n                      {query}\n                    </li>\n                ))}\n              </ul>\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}